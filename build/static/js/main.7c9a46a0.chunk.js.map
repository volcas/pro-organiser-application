{"version":3,"sources":["Containers/board/Board.module.css","components/AddCard/AddCard.module.css","components/Header/Header.module.css","Containers/CreateBoard/AddBoard.module.css","components/AddColumn/AddColumn.module.css","Containers/HomePage/Home.module.css","common/modal/Modal.module.css","components/Team/Team.module.css","common/styles/styles.module.css","components/Card/Card.module.css","firebase/init.js","utils/data.js","common/alert/Alert.js","common/loader/Loader.js","Containers/HomePage/Home.js","Containers/CreateBoard/AddBoard.js","components/Header/Header.js","components/Team/Team.js","common/modal/Modal.js","utils/utility.js","components/Card/Card.js","components/AddCard/AddCard.js","components/AddColumn/AddColumn.js","Containers/board/Board.js","App.js","index.js"],"names":["module","exports","config","apiKey","process","FIREBASE_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","MESSAGING_SENDER_ID","appId","APP_Id","measurementId","firebaseApp","firebase","initializeApp","firestore","getBoards","a","db","collection","orderBy","get","snapshot","boards","docs","map","d","data","id","addBoard","board","add","getBoard","doc","deleteBoard","delete","getColumns","boardId","where","addColumn","column","updateColumn","update","deleteColumn","Alert","children","canClose","type","isClosable","alert","display","padding","margin","borderRadius","position","fontSize","fontWeight","style","top","right","cursor","color","onClick","Loader","className","Home","useState","loading","setLoading","setBoards","useEffect","then","catch","styles","container","commonStyles","title","length","to","key","boardName","name","AddBoard","history","setName","teamMember","setTeamMember","setType","error","setError","isClose","field","htmlFor","value","onChange","e","target","placeholder","teamMembers","split","created","push","err","info","Header","header","nav","brand","menu","exact","activeClassName","activeLink","Team","arr","abbr","forEach","element","charAt","circle","Modal","Classes","modalContainer","modal","months","createDeepCopy","obj","JSON","parse","stringify","Card","card","hanldeEdit","hanldeArchive","isDetails","setIsDetails","members","dueDate","date","getDate","getMonth","getFullYear","convertDateToNice","Date","detailsModal","modalHeader","meta","btnGroup","danger","modalClose","modalBody","det","description","detTeam","item","onDragStart","ev","dataTransfer","setData","dragStart","draggable","text","actions","actionBtn","team","AddCard","handleCardAdd","handleClose","isAdd","handleEdit","setTitle","setDescription","setDueDate","setTeam","toISOString","substr","modalHead","close","formField","multiple","values","selectedOptions","opt","member","checkDate","createCard","today","getTime","isArchive","AddColumn","handleAdd","columnName","setColumnName","action","Board","match","setBoard","isColumnAdd","setIsColumnAdd","columns","setColumns","isCardAdd","setIsCardAdd","selectedColumn","setSelectedColumn","setIsAdd","inEditCard","setInEditCard","shortid","cards","uColumn","afterUpdateColumn","message","upCard","filter","c","newCards","upColumn","newColumn","getData","oldColumn","val","val1","newCols","col","sortedCols","sort","b","window","confirm","Promise","all","params","getAllColumns","containerHeader","ui","trash","handleDeleteColumn","onDragOver","preventDefault","onDrop","onDragDrop","openCardEdit","handleCardArchive","openAddCard","addButton","now","filColumns","cl","newColumns","resCols","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c9a46a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Board_container__3VYXV styles_container__3go8l\",\"containerHeader\":\"Board_containerHeader__Ix-au\",\"ui\":\"Board_ui__2Zptd\",\"columns\":\"Board_columns__NConR\",\"column\":\"Board_column___Dzxh\",\"trash\":\"Board_trash__2JCGt\",\"add\":\"Board_add__1dal8\",\"addButton\":\"Board_addButton__2IpP3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalHead\":\"AddCard_modalHead__1ldqB styles_modalHead__1wjp8\",\"close\":\"AddCard_close__1RV2z styles_modalClose__3vxec\",\"modalBody\":\"AddCard_modalBody__aMyiD\",\"formField\":\"AddCard_formField__B3B8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"nav\":\"Header_nav__3yRlw\",\"brand\":\"Header_brand__x6YrE\",\"menu\":\"Header_menu__BQHSW\",\"activeLink\":\"Header_activeLink__21ewl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddBoard_container__qtt4r styles_container__3go8l\",\"field\":\"AddBoard_field__1sMtZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalHead\":\"AddColumn_modalHead__1jv4V\",\"close\":\"AddColumn_close__VDnaE\",\"modalBody\":\"AddColumn_modalBody__3Z_RV\",\"field\":\"AddColumn_field__2UZJZ\",\"actionBtn\":\"AddColumn_actionBtn__TRyC5\",\"action\":\"AddColumn_action__PLw-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__2BA1d styles_container__3go8l\",\"boards\":\"Home_boards__1Is25\",\"board\":\"Home_board__18CMy\",\"boardName\":\"Home_boardName__3W94T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"Modal_modalContainer__2CVIk\",\"modal\":\"Modal_modal__uYIG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"Team_circle__3y-xM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3go8l\",\"title\":\"styles_title__2eWVO\",\"modalHead\":\"styles_modalHead__1wjp8\",\"modalClose\":\"styles_modalClose__3vxec\",\"btn\":\"styles_btn__3UtMa\",\"info\":\"styles_info__3gXsc styles_btn__3UtMa\",\"danger\":\"styles_danger__1L39O styles_btn__3UtMa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Card_item__3nslF\",\"text\":\"Card_text__3MSXi\",\"actions\":\"Card_actions__13Li3\",\"team\":\"Card_team__x0N6D\",\"modalHeader\":\"Card_modalHeader__2kGjm\",\"modalClose\":\"Card_modalClose__3u1ov\",\"title\":\"Card_title__2pVhP\",\"meta\":\"Card_meta__tSHLO\",\"btnGroup\":\"Card_btnGroup__p3LD_\",\"modalBody\":\"Card_modalBody__1zGFq\",\"det\":\"Card_det__KunTq\",\"detTeam\":\"Card_detTeam__18u5H\"};","/* eslint-disable */\nimport firebase from \"firebase/app\";\nimport firestore from \"firebase/firestore\";\n\nconst config = {\n  apiKey: process.env.FIREBASE_API_KEY,\n  authDomain: \"pro-organizer-app.firebaseapp.com\",\n  databaseURL: \"https://pro-organizer-app.firebaseio.com\",\n  projectId: \"pro-organizer-app\",\n  storageBucket: \"pro-organizer-app.appspot.com\",\n  messagingSenderId: process.env.MESSAGING_SENDER_ID,\n  appId: process.env.APP_Id,\n  measurementId: process.env.measurementId,\n};\n\nconst firebaseApp = firebase.initializeApp(config);\n\n// export the firestore db\nexport default firebaseApp.firestore();\n","import db from './../firebase/init';\n\nexport const getBoards = async () => {\n  try {\n    const snapshot = await db\n      .collection('boards')\n      .orderBy('name', 'desc')\n      .get();\n    const boards = snapshot.docs.map(d => ({ ...d.data(), id: d.id }));\n    return boards;\n  } catch (error) {\n    return [];\n  }\n};\n\n/**\n * Method which adds a board\n * @param {string} id for the doc\n * @param {object} board the board which has to be created\n */\nexport const addBoard = async board => {\n  try {\n    await db.collection('boards').add(board);\n    return true;\n  } catch (error) {\n    return error;\n  }\n};\n\n/**\n * Gets a single board with a given ID\n * @param {string} id single board ID\n */\nexport const getBoard = async id => {\n  try {\n    const board = await db\n      .collection('boards')\n      .doc(id)\n      .get();\n    return { ...board.data(), id: board.id };\n  } catch (error) {\n    // console.log(error);\n    return error;\n  }\n};\n\nexport const deleteBoard = async id => {\n  try {\n    await db\n      .collection('boards')\n      .doc(id)\n      .delete();\n    return true;\n  } catch (error) {\n    // console.log(error);\n    return error;\n  }\n};\n\nexport const getColumns = async boardId => {\n  try {\n    const snapshot = await db\n      .collection('columns')\n      .where('boardId', '==', boardId)\n      .orderBy('created')\n      .get();\n    const boards = snapshot.docs.map(d => ({ ...d.data(), id: d.id }));\n    return boards;\n  } catch (error) {\n    return [];\n  }\n};\n\nexport const addColumn = async column => {\n  try {\n    const d = await db.collection('columns').add(column);\n    return d.id;\n  } catch (error) {\n    return error;\n  }\n};\n\n/**\n * to update column\n * @param {string} id the id of the column\n * @param {any} column updated schema of column\n */\nexport const updateColumn = async (id, column) => {\n  try {\n    await db\n      .collection('columns')\n      .doc(id)\n      .update(column);\n    return true;\n  } catch (error) {\n    return error;\n  }\n};\n\n/**\n * to delete column\n * @param {string} id the id of the column\n */\nexport const deleteColumn = async id => {\n  try {\n    await db\n      .collection('columns')\n      .doc(id)\n      .delete();\n    return true;\n  } catch (error) {\n    return error;\n  }\n};\n","import React from 'react';\n\nexport const Alert = ({ children, canClose, type, isClosable = true }) => {\n  const alert = {\n    display: 'block',\n    padding: '12px 15px',\n    margin: '20px 0',\n    borderRadius: '5px',\n    position: 'relative',\n    fontSize: '15px',\n    fontWeight: '500'\n  };\n\n  const close = {\n    position: 'absolute',\n    top: '10px',\n    right: '15px',\n    cursor: 'pointer',\n    color: '#fff'\n  };\n\n  switch (type) {\n    case 'error':\n      alert['backgroundColor'] = '#ef5350';\n      alert['color'] = '#fff';\n      break;\n    case 'info':\n      alert['backgroundColor'] = '#1E75C1';\n      alert['color'] = '#fff';\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div style={alert}>\n      {isClosable && (\n        <div style={close} onClick={() => canClose(true)}>\n          &times;\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport './Loader.css';\n\nexport const Loader = () => {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"boxes\">\n        <div className=\"box\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n        <div className=\"box\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n        <div className=\"box\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n        <div className=\"box\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport styles from './Home.module.css';\nimport commonStyles from './../../common/styles/styles.module.css';\nimport { Link } from 'react-router-dom';\nimport { getBoards } from '../../utils/data';\nimport { Alert } from '../../common/alert/Alert';\nimport { Loader } from '../../common/loader/Loader';\n\nexport const Home = () => {\n  const [loading, setLoading] = useState(true);\n  const [boards, setBoards] = useState([]);\n\n  useEffect(() => {\n    getBoards()\n      .then(boards => {\n        setBoards(boards);\n        setLoading(false);\n      })\n      .catch(() => {\n        setBoards([]);\n      });\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className={styles.container}>\n          <h2 className={commonStyles.title}>Boards</h2>\n          {boards.length === 0 && (\n            <Alert type=\"info\" isClosable={false}>\n              You haven't created any boards. Kindly click on the 'Create a\n              Board' button in the navigation bar to create a board.\n            </Alert>\n          )}\n          <div className={styles.boards}>\n            {boards.map(board => {\n              return (\n                <Link\n                  to={'/board/' + board.id}\n                  className={styles.board}\n                  key={board.id}\n                >\n                  <div className={styles.boardName}>{board.name}</div>\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport commonStyles from './../../common/styles/styles.module.css';\nimport styles from './AddBoard.module.css';\nimport { addBoard } from '../../utils/data';\nimport { Alert } from '../../common/alert/Alert';\n\nexport const AddBoard = ({ history }) => {\n  const [name, setName] = useState('');\n  const [teamMember, setTeamMember] = useState('');\n  const [type, setType] = useState('');\n  const [error, setError] = useState('');\n\n  const saveBoard = () => {\n    if (!name && !teamMember) {\n      return setError('Name and Team Members are required fields');\n    }\n\n    const teamMembers = teamMember.split(',');\n\n    const newBoard = {\n      name,\n      teamMembers,\n      type\n    };\n\n    addBoard(newBoard)\n      .then(created => {\n        if (created) {\n          history.push('/');\n        } else {\n          setError('Could not add Board');\n        }\n      })\n      .catch(err => {\n        setError('Could not add Board. Some error occured.');\n      });\n  };\n\n  function handleClose(isClose) {\n    if (isClose) {\n      setError('');\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      {error && (\n        <Alert canClose={handleClose} type={'error'}>\n          {error}\n        </Alert>\n      )}\n      <h2 className={commonStyles.title}>Create a board</h2>\n      <div className={styles.field}>\n        <label htmlFor=\"name\">Enter a name for your board</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          id=\"name\"\n          placeholder=\"eg. Agile Sprint Board\"\n        />\n      </div>\n      <div className={styles.field}>\n        <label htmlFor=\"team\">Add your Team members</label>\n        <input\n          type=\"text\"\n          name=\"team\"\n          id=\"team\"\n          value={teamMember}\n          onChange={e => setTeamMember(e.target.value)}\n          placeholder=\"Add your team members(separated by commas)\"\n        />\n      </div>\n      <div className={styles.field}>\n        <label htmlFor=\"type\">Enter the type for your board</label>\n        <input\n          type=\"text\"\n          name=\"type\"\n          id=\"type\"\n          value={type}\n          onChange={e => setType(e.target.value)}\n          placeholder=\"eg. Design UX\"\n        />\n      </div>\n      <div className={styles.field}>\n        <button\n          type=\"submit\"\n          onClick={saveBoard}\n          className={commonStyles.info}\n          id=\"CreateBoard\"\n        >\n          Create\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Header.module.css';\n\nexport const Header = () => {\n  return (\n    <header className={styles.header}>\n      <nav className={styles.nav}>\n        <div className={styles.brand}>\n          <NavLink to=\"/\">Pro-Organiser</NavLink>\n        </div>\n        <ul className={styles.menu}>\n          <li>\n            <NavLink exact activeClassName={styles.activeLink} to=\"/\">\n              Home\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/createboard\" activeClassName={styles.activeLink}>\n              Create a board\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n","import React from 'react';\nimport styles from './Team.module.css';\n\nexport const Team = ({ name }) => {\n  const arr = name.split(' ');\n  let abbr = '';\n  arr.forEach(element => {\n    abbr = element.charAt(0);\n  });\n  return <div className={styles.circle}>{abbr}</div>;\n};\n","/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport Classes from \"./Modal.module.css\";\n\nexport const Modal = ({ children }) => (\n  <div className={Classes.modalContainer}>\n    <div className={Classes.modal}>{children}</div>\n  </div>\n);\n","const months = [\n  'January',\n  'Febuary',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const convertDateToNice = date => {\n  return `${date.getDate()} ${months[date.getMonth()]}, ${date.getFullYear()}`;\n};\n\nexport const createDeepCopy = obj => JSON.parse(JSON.stringify(obj));\n","import React, { useState } from \"react\";\nimport styles from \"./Card.module.css\";\nimport commonStyles from \"./../../common/styles/styles.module.css\";\nimport { Team } from \"../Team/Team\";\nimport { Modal } from \"../../common/modal/Modal\";\nimport { convertDateToNice } from \"../../utils/utility\";\n\nexport const Card = ({ card, board, hanldeEdit, hanldeArchive, column }) => {\n  const [isDetails, setIsDetails] = useState(false);\n  const members = card.teamMembers.map((name) => (\n    <Team name={name} key={name} />\n  ));\n  const date = new Date(card.date);\n  const dueDate = convertDateToNice(date);\n\n  function doEdit() {\n    setIsDetails(false);\n    hanldeEdit();\n  }\n\n  function doArchive() {\n    setIsDetails(false);\n    hanldeArchive();\n  }\n\n  const detailsModal = (\n    <Modal>\n      <div className={styles.modalHeader}>\n        <div className={styles.title}>\n          {card.title}\n          <div className={styles.meta}>\n            in <span>{board.name}</span>\n          </div>\n        </div>\n        <div className={styles.btnGroup}>\n          <button className={commonStyles.info} onClick={doEdit}>\n            Edit\n          </button>\n          <button className={commonStyles.danger} onClick={doArchive}>\n            Archive\n          </button>\n        </div>\n        <div className={styles.modalClose} onClick={() => setIsDetails(false)}>\n          &times;\n        </div>\n      </div>\n      <div className={styles.modalBody}>\n        <div className={styles.det}>\n          <header>Description</header>\n          <div>{card.description}</div>\n        </div>\n        <div className={styles.det}>\n          <header>Members</header>\n          <div className={styles.detTeam}>{members}</div>\n        </div>\n        <div className={styles.det}>\n          <header>Due Date</header>\n          <div>{dueDate}</div>\n        </div>\n      </div>\n    </Modal>\n  );\n\n  function dragStart(ev, card) {\n    // console.log(ev)\n    // console.log(card);\n    ev.dataTransfer.setData(\"card\", JSON.stringify(card));\n    ev.dataTransfer.setData(\"columnFrom\", JSON.stringify(column));\n  }\n\n  return (\n    <>\n      <li\n        className={styles.item}\n        onDragStart={(e) => dragStart(e, card)}\n        draggable\n        onClick={() => setIsDetails(true)}\n      >\n        <div className={styles.text}>{card.title}</div>\n        <div className={styles.actions}>\n          <div className={styles.actionBtn}>\n            <i\n              className=\"material-icons\"\n              style={{ fontSize: \"30px\", cursor: \"move\" }}\n            >\n              list\n            </i>\n          </div>\n          <div className={styles.team}>{members}</div>\n        </div>\n      </li>\n      {isDetails && detailsModal}\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Modal } from '../../common/modal/Modal';\nimport styles from './AddCard.module.css';\nimport commonStyles from './../../common/styles/styles.module.css';\nimport { Alert } from '../../common/alert/Alert';\n\nexport const AddCard = ({\n  board,\n  handleCardAdd,\n  handleClose,\n  card,\n  isAdd = true,\n  handleEdit\n}) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [team, setTeam] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (card) {\n      setTitle(card.title);\n      setDescription(card.description);\n      setTeam(card.teamMembers);\n      const date = new Date(card.date);\n      setDueDate(date.toISOString().substr(0, 10));\n    }\n  }, [isAdd, card]);\n\n  function onSelectChange(e) {\n    const values = [...e.target.selectedOptions].map(opt => opt.value);\n    setTeam(values);\n  }\n\n  function onAdd() {\n    if (!title || !description || !dueDate || team.length === 0) {\n      setError('All the fields are required');\n      return;\n    }\n\n    const checkDateBool = checkDate(dueDate);\n\n    if (checkDateBool) {\n      setError('Cannot select a past date.');\n      return;\n    }\n\n    setError(null);\n\n    const card = createCard(dueDate, title, team, description);\n\n    handleCardAdd(card);\n  }\n\n  function onEdit() {\n    if (!title || !description || !dueDate || team.length === 0) {\n      setError('All the fields are required');\n      return;\n    }\n\n    const checkDateBool = checkDate(dueDate);\n\n    if (checkDateBool) {\n      setError('Cannot select a past date.');\n      return;\n    }\n\n    setError(null);\n\n    const card = createCard(dueDate, title, team, description);\n\n    handleEdit(card);\n  }\n\n  return (\n    <Modal>\n      <div className={styles.modalHead}>\n        <div>{isAdd ? 'Add Card' : 'Edit Card'}</div>\n        <div className={styles.close} onClick={handleClose}>\n          &times;\n        </div>\n      </div>\n      {error && (\n        <Alert\n          children={error}\n          type={'error'}\n          canClose={() => setError(null)}\n        />\n      )}\n      <div className={styles.modalBody}>\n        <div className={styles.formField}>\n          <label htmlFor=\"title\">Enter the title for your task</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            placeholder=\"eg. Add a new Icon\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n        </div>\n        <div className={styles.formField}>\n          <label htmlFor=\"title\">\n            Choose members for this task(select multiple, if needed)\n          </label>\n          <select\n            name=\"members\"\n            id=\"members\"\n            multiple={true}\n            value={team}\n            onChange={onSelectChange}\n          >\n            {board.teamMembers.map(member => (\n              <option value={member} key={member}>\n                {member}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className={styles.formField}>\n          <label htmlFor=\"title\">Add the descriptions for your task</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"description\"\n            placeholder=\"Add your description here\"\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n          />\n        </div>\n        <div className={styles.formField}>\n          <label htmlFor=\"title\">Select the due date for this task</label>\n          <input\n            type=\"date\"\n            name=\"title\"\n            id=\"due_date\"\n            value={dueDate}\n            onChange={e => setDueDate(e.target.value)}\n          />\n        </div>\n        <div className={styles.formField}>\n          {isAdd ? (\n            <button className={commonStyles.info} id=\"CreateCard\" onClick={onAdd}>\n              Add Card\n            </button>\n          ) : (\n            <button className={commonStyles.info} onClick={onEdit}>\n              Edit Card\n            </button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction checkDate(dueDate) {\n  const today = new Date().getTime();\n  const dueDateMili = new Date(dueDate).getTime();\n\n  if (dueDateMili < today) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction createCard(dueDate, title, teamMembers, description) {\n  const date = new Date(dueDate).getTime();\n  return {\n    title,\n    description,\n    teamMembers,\n    date,\n    isArchive: false\n  };\n}\n","import React, { useState } from \"react\";\nimport { Modal } from \"../../common/modal/Modal\";\nimport styles from \"./AddColumn.module.css\";\nimport commonStyles from \"./../../common/styles/styles.module.css\";\n\nexport const AddColumn = ({ handleAdd, handleClose }) => {\n  const [columnName, setColumnName] = useState(\"\");\n\n  function handleAddCloumn() {\n    if (!columnName) {\n      return alert(\"Enter a column name\");\n    }\n\n    handleAdd(columnName);\n  }\n\n  return (\n    <Modal>\n      <div className={styles.modalHead}>\n        <div>Add Column</div>\n        <div className={styles.close} onClick={handleClose}>\n          &times;\n        </div>\n      </div>\n      <div className={styles.modalBody}>\n        <div className={styles.field}>\n          <label htmlFor=\"column_name\">Enter a Column Name:</label>\n          <input\n            type=\"text\"\n            value={columnName}\n            name=\"column_name\"\n            id=\"column_name\"\n            onChange={(e) => setColumnName(e.target.value)}\n          />\n        </div>\n        <div className={styles.action}>\n          <button\n            id=\"CreateColumn\"\n            onClick={handleAddCloumn}\n            className={commonStyles.info}\n          >\n            Add Column\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport commonStyles from \"./../../common/styles/styles.module.css\";\nimport styles from \"./Board.module.css\";\nimport {\n  getBoard,\n  getColumns,\n  addColumn,\n  updateColumn,\n  deleteColumn,\n  deleteBoard,\n} from \"../../utils/data\";\nimport { Loader } from \"../../common/loader/Loader\";\nimport { Card } from \"../../components/Card/Card\";\nimport { AddCard } from \"../../components/AddCard/AddCard\";\nimport { AddColumn } from \"../../components/AddColumn/AddColumn\";\nimport { createDeepCopy } from \"../../utils/utility\";\nimport * as shortid from \"shortid\";\nimport { Alert } from \"../../common/alert/Alert\";\n\nexport const Board = ({ match, history }) => {\n  const [loading, setLoading] = useState(true);\n  const [board, setBoard] = useState({});\n  const [isColumnAdd, setIsColumnAdd] = useState(false);\n  const [columns, setColumns] = useState([]);\n  const [isCardAdd, setIsCardAdd] = useState(false);\n  const [selectedColumn, setSelectedColumn] = useState(null);\n  const [isAdd, setIsAdd] = useState(true);\n  const [inEditCard, setInEditCard] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    (async function () {\n      const data = await getBoard(match.params.name);\n      setBoard(data);\n      await getAllColumns(data.id, setColumns);\n      setLoading(false);\n    })();\n  }, [match]);\n\n  function handleAddCloumn(columnName) {\n    const newColumn = {\n      boardId: board.id,\n      name: columnName,\n      cards: [],\n      created: Date.now(),\n    };\n\n    addColumn(newColumn)\n      .then((value) => {\n        if (value) {\n          newColumn[\"id\"] = value;\n          setColumns([...columns, newColumn]);\n          setIsColumnAdd(false);\n        }\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  }\n\n  function handleModalClose() {\n    setIsColumnAdd(false);\n  }\n\n  function openAddCard(column) {\n    setIsCardAdd(true);\n    setSelectedColumn(column);\n    setInEditCard(null);\n  }\n\n  async function addCard(card) {\n    try {\n      card[\"id\"] = shortid();\n      const cards = [...selectedColumn.cards, card];\n      const uColumn = createDeepCopy(selectedColumn);\n      uColumn.cards = cards;\n      const val = await updateColumn(uColumn.id, uColumn);\n      if (val) {\n        afterUpdateColumn(columns, selectedColumn, uColumn, setColumns);\n        setIsCardAdd(false);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  function openCardEdit(card, column) {\n    setIsAdd(false);\n    setIsCardAdd(true);\n    setSelectedColumn(column);\n    setInEditCard(card);\n  }\n\n  async function handleCardEdit(upCard) {\n    try {\n      const card = { id: inEditCard.id, ...upCard };\n      const uColumn = createDeepCopy(selectedColumn);\n      const cards = selectedColumn.cards.filter((c) => c.id !== inEditCard.id);\n      const newCards = [...cards, card];\n      uColumn.cards = newCards;\n      const val = await updateColumn(selectedColumn.id, uColumn);\n      if (val) {\n        afterUpdateColumn(columns, selectedColumn, uColumn, setColumns);\n        setIsAdd(true);\n        setIsCardAdd(false);\n        setSelectedColumn(null);\n        setInEditCard(null);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  async function handleCardArchive(card, column) {\n    try {\n      card.isArchive = true;\n      const newCards = column.cards.filter((c) => c.id !== card.id);\n      const upColumn = createDeepCopy(column);\n      upColumn.cards = [...newCards, card];\n      const val = await updateColumn(column.id, upColumn);\n      if (val) {\n        afterUpdateColumn(columns, column, upColumn, setColumns);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  async function onDragDrop(ev, newColumn) {\n    try {\n      const card = JSON.parse(ev.dataTransfer.getData(\"card\"));\n      const oldColumn = JSON.parse(ev.dataTransfer.getData(\"columnFrom\"));\n      if (oldColumn.id === newColumn.id) {\n        return;\n      }\n      oldColumn.cards = oldColumn.cards.filter((c) => c.id !== card.id);\n      const val = await updateColumn(oldColumn.id, oldColumn);\n      newColumn.cards = [...newColumn.cards, card];\n      const val1 = await updateColumn(newColumn.id, newColumn);\n      if (val && val1) {\n        const newCols = columns.filter(\n          (col) => col.id !== oldColumn.id && col.id !== newColumn.id\n        );\n        const sortedCols = [...newCols, oldColumn, newColumn].sort(\n          (a, b) => a.created - b.created\n        );\n        setColumns(sortedCols);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  function handleDeleteColumn(column) {\n    const newCols = columns\n      .filter((c) => c.id !== column.id)\n      .sort((a, b) => a.created - b.created);\n    deleteColumn(column.id)\n      .then(() => {\n        setColumns(newCols);\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n  }\n\n  async function handleBoardDelete() {\n    if (window.confirm(\"Are you sure you want to delete the board?\")) {\n      setLoading(true);\n      await Promise.all(\n        columns.map(async (c) => {\n          await deleteColumn(c.id);\n        })\n      );\n      const val = await deleteBoard(board.id);\n      if (val) {\n        history.push(\"/\");\n      }\n    }\n  }\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className={styles.container}>\n          <div className={styles.containerHeader}>\n            <h2 className={commonStyles.title}>{board.name}</h2>\n            <button className={commonStyles.danger} onClick={handleBoardDelete}>\n              Delete Board\n            </button>\n          </div>\n          {error && (\n            <Alert type={\"error\"} canClose={() => setError(null)}>\n              {error}\n            </Alert>\n          )}\n          <div className={styles.ui}>\n            <div className={styles.columns}>\n              {columns.map((column) => {\n                return (\n                  <div className={styles.column} key={column.id}>\n                    <header>\n                      {column.name}\n                      <div\n                        className={styles.trash}\n                        onClick={() => handleDeleteColumn(column)}\n                      >\n                        <i\n                          className=\"material-icons\"\n                          style={{ fontSize: \"25px\" }}\n                        >\n                          delete_outline\n                        </i>\n                      </div>\n                    </header>\n                    <ul\n                      onDragOver={(e) => e.preventDefault()}\n                      onDrop={(e) => {\n                        onDragDrop(e, column);\n                      }}\n                    >\n                      {column.cards.map(\n                        (card) =>\n                          !card.isArchive && (\n                            <Card\n                              card={card}\n                              board={board}\n                              key={card.id}\n                              hanldeEdit={() => openCardEdit(card, column)}\n                              hanldeArchive={() =>\n                                handleCardArchive(card, column)\n                              }\n                              column={column}\n                            />\n                          )\n                      )}\n                    </ul>\n                    <footer>\n                      <div\n                        className={styles.add}\n                        onClick={() => openAddCard(column)}\n                      >\n                        Add a card\n                      </div>\n                    </footer>\n                  </div>\n                );\n              })}\n              <button\n                className={styles.addButton}\n                onClick={() => setIsColumnAdd(true)}\n              >\n                Add a column\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      {isColumnAdd && (\n        <AddColumn handleClose={handleModalClose} handleAdd={handleAddCloumn} />\n      )}\n      {isCardAdd && (\n        <AddCard\n          board={board}\n          handleCardAdd={addCard}\n          handleClose={() => setIsCardAdd(false)}\n          isAdd={isAdd}\n          card={inEditCard}\n          handleEdit={handleCardEdit}\n        />\n      )}\n    </>\n  );\n};\n\nfunction afterUpdateColumn(columns, selectedColumn, upColumn, setColumns) {\n  const filColumns = columns.filter((cl) => cl.id !== selectedColumn.id);\n  const newColumns = [...filColumns, upColumn];\n  newColumns.sort((a, b) => a.created - b.created);\n  setColumns(newColumns);\n}\n\nasync function getAllColumns(id, setColumns) {\n  const resCols = await getColumns(id);\n  setColumns(resCols);\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home } from \"./Containers/HomePage/Home\";\nimport { AddBoard } from \"./Containers/CreateBoard/AddBoard\";\nimport { Header } from \"./components/Header/Header\";\nimport { Board } from \"./Containers/board/Board\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/createboard\" component={AddBoard} />\n        <Route path=\"/board/:name\" component={Board} />\n        <Route exact path=\"*\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}